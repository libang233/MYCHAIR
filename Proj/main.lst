C51 COMPILER V9.01   MAIN                                                                  02/22/2017 17:27:16 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Src\main.c BROWSE INCDIR(..\Src) DEBUG OBJECTEXTE
                    -ND PRINT(.\main.lst) OBJECT(.\main.obj)

line level    source

   1          // 文件名 ：main.c
   2          // 作者   : 赵成华 陈统 何立邦
   3          // 日期   : 2017年 2月 15日
   4          
   5          #include "STC12C5410AD.H"
   6          #include "newtype.h"
   7          #include "Globle.h"
   8          #include "motor.h"      
   9          #include "Serial.h"
  10          #include "string.h"
  11          #include "Timer.h"
  12          
  13          union nt_uEVNT   myEvnt ;                                       // 事件标志位别名 全局
  14          nt_Massage               myMassage ;                                                            // 按摩相关数据结构 全局
  15          nt_Serial                mySerial ;                                                                     // 串口的数据结构  全局
  16          nt_Time          myTime ;                                                                       // 定时器数据结构  全局
  17          
  18          u8 SendMsg[] = {0x00,0x00,0x78,0x1E,0X00,0x00,0xBB} ;           // 串口数据
  19          
  20          // 函数名 ：全局变量初始化函数
  21          // 参数   ：无 
  22          // 返回值 ：无
  23          // 注释   : 无 
  24          
  25          void Reset_Global(void)                                 
  26          {
  27   1              myEvnt.ALL =0;                                                                                  // myEvnt内所有标志初始化
  28   1              memset( &mySerial ,0 ,sizeof(mySerial)) ;                               // mySerial 内所有标志初始化
  29   1              memset( &myMassage ,0 ,sizeof(myMassage)) ;                             // myMassage 内所有标志初始化
  30   1              memset( &myTime ,0 ,sizeof(myTime)) ;                                   // myTime 内所有标志初始化
  31   1              
  32   1          SendMsg[0] = SendMsg[0] & 0x01;
  33   1              SendMsg[1] = 0x00;
  34   1              SendMsg[2] = 0x78;
  35   1              SendMsg[3] = 0x1E;                                                      // 串口数据初始化
  36   1      
  37   1              myTime.Display = SendMsg[3] ;                                                   // 为显示时间赋初值
  38   1      }
  39          
  40          // 函数名 ：系统始化函数
  41          // 参数   ：无 
  42          // 返回值 ：无
  43          // 注释   : 无
  44          void SysInit(void)
  45          {
  46   1              WDT_CONTR = 0x3c;                                                                               // 开机喂狗
  47   1              
  48   1              Init_Serial() ;                                                                                 // 串口初始化
  49   1              Init_Timer();                                                                                           // 定时器初始化
  50   1              Init_Motor();                                                                                           // 电机初始化
  51   1          Init_PWM() ;                                                                                                // PWM波初始化
  52   1      }
  53          
  54          // 函数名 ：主函数
C51 COMPILER V9.01   MAIN                                                                  02/22/2017 17:27:16 PAGE 2   

  55          // 参数   ：无 
  56          // 返回值 ：无
  57          // 注释   : 无
  58          
  59          void main (void)                                                                                
  60          {
  61   1              
  62   1              myEvnt.Bit.IsReset_F = true ;                                                                           // 申请开机重置
  63   1              
  64   1              while (1)
  65   1              {       
  66   2                      {                                                                                                                               // 块语句:硬件死机检测
  67   3                              while(!upCheck && !dnCheck)
  68   3                              {
  69   4                                      allMotorsStop();
  70   4                              }
  71   3                              
  72   3                              if (!upCheck)
  73   3                                      upm=1;
  74   3                              if (!dnCheck)
  75   3                                      dnm=1;
  76   3                      }
  77   2                      
  78   2                      if( true == myEvnt.Bit.IsPOWER_OFF )                                                    // 关机
  79   2                      {
  80   3                              myEvnt.Bit.IsPOWER_OFF = false ;                                        
  81   3                              allMotorsStop() ;
  82   3                              myEvnt.Bit.IsStoping = true;
  83   3                      }
  84   2                      
  85   2                      if( true == myEvnt.Bit.IsReset_F )                                                              // 开始重置
  86   2                      {
  87   3                              myEvnt.Bit.IsReset_F = false ;  
  88   3                      Reset_Global() ;
  89   3                  SysInit() ;
  90   3                              reset() ;                                                                                                       
  91   3                      }
  92   2      
  93   2                      if( true == myEvnt.Bit.IsSerial_RX )                                                    // 开始串口处理
  94   2                      {
  95   3                              myEvnt.Bit.IsSerial_RX = false ;
  96   3                              SerialAnalysis() ;                                                                                      // 串口数据处理
  97   3                      }
  98   2              
  99   2                      if( true == myEvnt.Bit.IsAllMotorsStop )                                        // 所有电机停止处理
 100   2                      {
 101   3                              myEvnt.Bit.IsAllMotorsStop = false ;
 102   3                              allMotorsStop() ;                                                                                       // 所有电机停止工作
 103   3                      }
 104   2                      
 105   2                      
 106   2                      if( true == myEvnt.Bit.IsChangeWidth )                                      // 申请拍打宽度调整
 107   2                      {
 108   3                              myEvnt.Bit.IsChangeWidth = false ;
 109   3                              ChangeWidth();          
 110   3                      }
 111   2                      
 112   2                      if( true == myEvnt.Bit.IsPer && false == myEvnt.Bit.IsStoping )                                                 // 申请拍打敲背
 113   2                      {                                                                                                                                                                                                                                        
 114   3                              myEvnt.Bit.IsPer = false ;                      
 115   3                              per();                          
 116   3                      }
C51 COMPILER V9.01   MAIN                                                                  02/22/2017 17:27:16 PAGE 3   

 117   2                      
 118   2                      if( true == myEvnt.Bit.IsKne && false == myEvnt.Bit.IsStoping )                                                 // 申请揉捏按摩
 119   2                      {
 120   3                              myEvnt.Bit.IsKne = false ;                                              
 121   3                              kne() ;                         
 122   3                      }
 123   2                      
 124   2                      if( true == myEvnt.Bit.IsPerKne && false == myEvnt.Bit.IsStoping )                                                      // 申请揉捏按摩和拍打敲背
 125   2                      {
 126   3                              myEvnt.Bit.IsPerKne = false ;                                   
 127   3                              per_kne() ;                             
 128   3                      } 
 129   2                  
 130   2              if( true == myEvnt.Bit.IsAuto_One && false == myEvnt.Bit.IsStoping )
 131   2                      {                                                                                                                                                       
 132   3                         auto_one();                                                                                                                           //申请自动1
 133   3                      }
 134   2      
 135   2                      if( true == myEvnt.Bit.IsAuto_Two && false == myEvnt.Bit.IsStoping )
 136   2                      {
 137   3                          auto_two();                                                                                                                          //申请自动2
 138   3                      }
 139   2                                      
 140   2      //              SendMsg[3] = myTime.Display ;                                                                                        // 时刻刷新发送的显示时间
 141   2              }
 142   1      }
 143          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    346    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     26    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
