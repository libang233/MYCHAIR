C51 COMPILER V9.01   MOTOR                                                                 02/20/2017 15:30:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\motor.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Src\motor.c BROWSE INCDIR(..\Src) DEBUG OBJECTEXT
                    -END PRINT(.\motor.lst) OBJECT(.\motor.obj)

line level    source

   1          // 文件名 ：motor.c
   2          // 作者   : 赵成华 陈统 何立邦
   3          // 日期   : 2017年 2月 17日
   4          
   5          #include "motor.h"
   6          
   7          // 函数名 ：pwm波初始化函数
   8          // 参数   ：无 
   9          // 返回值 ：无
  10          // 注释   : 已调试
  11          
  12          void Init_PWM(void)
  13          {
  14   1                      CCON = 0;                                                                                       //Initial PCA control register
  15   1                                                                                                                                                      //PCA timer stop running
  16   1                                                                                                                                                      //Clear CF flag
  17   1                                                                                                                                                      //Clear all module interrupt flag
  18   1                      CL = 0;                                                                                         //Reset PCA base timer
  19   1                      CH = 0;
  20   1                      CMOD = 0x02;                                                                                    //Set PCA timer clock source as Fosc/2
  21   1                                                                                                                                                      //Disable PCA timer overflow interrupt
  22   1                      CCAP0H = CCAP0L = 0x00;                                                                         //PWM0 port output 50% duty cycle square wave
  23   1                      CCAPM0 = 0x42;                                                                                  //PCA module-0 work in 8-bit PWM mode and no PCA interrupt
  24   1      
  25   1                      CCAP2H = CCAP2L = 0x00;                                                                         //PWM1 port output 0% duty cycle square wave
  26   1                      CCAPM2 = 0x42;                                                                                  //PCA module-1 work in 8-bit PWM mode and no PCA interrupt
  27   1      
  28   1                      CR = 1;                                                                                         //PCA timer start run
  29   1      }
  30          
  31          // 函数名 ：电机初始化函数
  32          // 参数   ：无 
  33          // 返回值 ：无
  34          // 注释   : 已调试
  35          
  36          void Init_Motor(void)  
  37          {
  38   1              myMassage.speed = 55 ;                                                                  // 开机初始化电机pwm值                  
  39   1      }
  40          
  41          // 函数名 ：揉捏函数
  42          // 参数   ：无 
  43          // 返回值 ：无
  44          // 注释   : 已调试
  45          
  46          void kne(void)
  47          {
  48   1              SendMsg[0] = SendMsg[0] | 0x40;
  49   1              SendMsg[0] = SendMsg[0] & ~0x80;
  50   1              SendMsg[1] = SendMsg[1] & ~0x02;
  51   1              
  52   1              CCAP0H = myMassage.speed ;
  53   1              CCAP0L = myMassage.speed ;
  54   1              CCAP2H = 0 ;
C51 COMPILER V9.01   MOTOR                                                                 02/20/2017 15:30:13 PAGE 2   

  55   1              CCAP2L = 0 ;
  56   1      }
  57          
  58          // 函数名 ：捶背敲打函数
  59          // 参数   ：无 
  60          // 返回值 ：无
  61          // 注释   : 已调试
  62          
  63          void per()
  64          {
  65   1              SendMsg[0] = SendMsg[0] | 0x80;
  66   1              SendMsg[0] = SendMsg[0] & ~0x40;
  67   1              SendMsg[1] = SendMsg[1] & ~0x02;
  68   1              CCAP2H = myMassage.speed - DIFFERENT_SPEED ;
  69   1              CCAP2L = myMassage.speed - DIFFERENT_SPEED ;
  70   1              CCAP0H = 0;
  71   1              CCAP0L = 0 ;
  72   1      }
  73          
  74          // 函数名 ：揉拍函数
  75          // 参数   ：无 
  76          // 返回值 ：无
  77          // 注释   : 已调试
  78          
  79          void per_kne()
  80          {
  81   1              SendMsg[1] = SendMsg[1] | 0x02;
  82   1              SendMsg[0] = SendMsg[0] & ~0x80;
  83   1              SendMsg[0] = SendMsg[0] & ~0x40;
  84   1              CCAP2H = myMassage.speed ;
  85   1              CCAP2L = myMassage.speed ;
  86   1              CCAP0H = myMassage.speed ;
  87   1              CCAP0L = myMassage.speed ;
  88   1      }
  89          
  90          // 函数名 ：所有电机都停止
  91          // 参数   ：所需要的实时速度 
  92          // 返回值 ：无
  93          // 注释   : 已调试
  94          
  95          void allMotorsStop(void)
  96          {
  97   1              CCAP0H = 0x00 ;
  98   1              CCAP0L = 0x00 ;
  99   1              CCAP2H = 0x00 ;
 100   1              CCAP2L = 0x00 ;
 101   1              backm_up  = 1 ;
 102   1              backm_dn  = 1 ;
 103   1              upm=1;
 104   1              dnm=1;
 105   1              // sec=0;
 106   1      }
 107          
 108          // 函数名 ：调整宽度
 109          // 参数   ：无 
 110          // 返回值 ：无
 111          // 注释   : 已调试
 112          
 113          void changeWidth(void)
 114          {
 115   1          u8 i1;
 116   1          i1 = myMassage.AngleCount ;
C51 COMPILER V9.01   MOTOR                                                                 02/20/2017 15:30:13 PAGE 3   

 117   1          if(i1<5)
 118   1          {
 119   2                   while( myMassage.AngleCount < i1 + 3)
 120   2                       CCAP0H = CCAP0L= myMassage.speed;
 121   2                       CCAP0H = CCAP0L=0;
 122   2              }
 123   1              else
 124   1              {       
 125   2                  while( myMassage.AngleCount != 0)
 126   2                  CCAP0H = CCAP0L= WiDTH_SPEED;
 127   2                  CCAP0H = CCAP0L=0;
 128   2              }   
 129   1      }
 130          
 131          // 函数名 ：自动模式1
 132          // 参数   ：无 
 133          // 返回值 ：无
 134          
 135          void auto_1(void)
 136          {
 137   1             
 138   1      }
 139          
 140          //void handle(void)
 141          //{
 142          //         if(reset_F)
 143          //                      reset();
 144          //              else if(SendMsg[0] & 0x01 && !(SendMsg[1] & 0x01))    //开启电源且未暂停
 145          //              {
 146          //       if(action_N==0x01)
 147          //                                      auto_1();       
 148          //                       if(action_N==0x02)
 149          //                                      auto_2();       
 150          //                       if(action_N==0x03)
 151          //                                      auto_3();       
 152          //                       if(action_N==0x04)
 153          //                                      per_kne(speed); 
 154          //                       if(action_N==0x05)
 155          //                                      kne(speed);     
 156          //                       if(action_N==0x06)
 157          //                                      per(speed);     
 158          //                       if(action_N==0x06 && width_F)    //width宽度调整按钮按下
 159          //                       { 
 160          //                              u8 i1;
 161          //                               width_F=0;
 162          //                               i1=mdb;
 163          //                               if( i1 <5)
 164          //                               {
 165          //                                       while(mdb<i1+3)
 166          //                                       CCAP0H = CCAP0L=speed;
 167          //                                       CCAP0H = CCAP0L=0;
 168          //                               }
 169          //                               else
 170          //                               {      while(mdb!=0)
 171          //                                       CCAP0H = CCAP0L=speed;
 172          //                                       CCAP0H = CCAP0L=0;
 173          //                               }
 174          //                                                      
 175          //                              }
 176          //                                       
 177          //              }       
 178          //              if(SendMsg[1] & 0x01)  //暂停
C51 COMPILER V9.01   MOTOR                                                                 02/20/2017 15:30:13 PAGE 4   

 179          //                      allMotorsStop();
 180          //}
 181          
 182          //void reset(void)  //重置
 183          //{
 184          //      allMotorsStop();
 185          //      init();
 186          //      reset_F=0;
 187          //}
 188          
 189          
 190                          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    171    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
