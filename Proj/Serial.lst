C51 COMPILER V9.01   SERIAL                                                                02/20/2017 15:30:13 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Serial.obj
COMPILER INVOKED BY: D:\Program Files (x86)\Keil_v5\C51\BIN\C51.EXE ..\Src\Serial.c BROWSE INCDIR(..\Src) DEBUG OBJECTEX
                    -TEND PRINT(.\Serial.lst) OBJECT(.\Serial.obj)

line level    source

   1          // 文件名 ：Serial.c
   2          // 作者   : 赵成华 陈统 何立邦
   3          // 日期   : 2017年 2月 15日
   4          
   5          #include "Serial.h"
   6          
   7          
   8          // 函数名 ：串口初始化函数
   9          // 参数   ：无 
  10          // 返回值 ：无
  11          // 注释   : 需要参考手册 上机需要检测
  12          
  13          void Init_Serial(void)
  14          {       
  15   1              ES = 0 ;                                                                                // 关闭串口中断
  16   1              
  17   1              TMOD = 0X21;                                                                    // 设为定时器T1工作方式2(用于串口通讯),定时器T0方式1
  18   1              TH1  = 0XFD;                                                                    // 波特率设为9600
  19   1              TL1  = 0XFD;      
  20   1              TR1  = 1;                                                                       // 打开定时器1
  21   1              SCON = 0X50;                                                                    // 设为串口工作方式1
  22   1              
  23   1              ES = 1;                                                                         // 开串口中断
  24   1      }       
  25          
  26          // 函数名 ：串口中断函数
  27          // 参数   ：无 
  28          // 返回值 ：无
  29          // 注释   : 把接收到的数据存放到全局变量
  30          
  31          void Serial() interrupt 4                                                                       // 接收中断服务程序
  32          {
  33   1      
  34   1              RI = 0;                                                                                 // 接收标记位清零
  35   1              mySerial.Res = SBUF;                                                                            // 串口接收完成，将串口接收到的值存放在串口接收数据结构
  36   1      
  37   1              myEvnt.Bit.IsSerial_RX = true;                                                  // 串口接收完成，申请数据处理
  38   1      }
  39          
  40          
  41          // 函数名 ：串口解析函数
  42          // 参数   ：无 
  43          // 返回值 ：无
  44          // 注释   : 需要参考手册 上机需要检测
  45          
  46          void SerialAnalysis (void)
  47          {
  48   1              u8 i;                                                                                                   
  49   1              
  50   1          switch( mySerial.Res )                                                                                      // 判断串口数据值
  51   1              {
  52   2                      case 0xAA :                                                                                                             // 定时接收到手控板串口指令
  53   2                                      ES = 0;
  54   2                                      for(i=0;i<7;i++)
C51 COMPILER V9.01   SERIAL                                                                02/20/2017 15:30:13 PAGE 2   

  55   2                                      {
  56   3                                              SBUF = SendMsg[i];                                                                      // 7位数据串口应答发送
  57   3                                              while( !TI );
  58   3                                                      TI=0;
  59   3                                      }
  60   2                                                      ES = 1;
  61   2                              break;
  62   2              
  63   2                      case 0X03 :                                                                                                             // 接收到开机键按钮
  64   2                                      if( !(SendMsg[0] & 0x01) )                                                              // 目前关机状态收到开机指令
  65   2                                      {               
  66   3                                              SendMsg[0] = SendMsg[0] | 0x01 ;                
  67   3                                      }
  68   2                                      else
  69   2                                      {
  70   3                                              SendMsg[0] = SendMsg[0] & (~0x01) ;
  71   3                                      }
  72   2                                      mySerial.action_N = 0x00;
  73   2                                      myEvnt.Bit.IsReset_F = true ;                                           // 申请重置     
  74   2                              break;  
  75   2                      
  76   2                      case 0x01 :                                                                                                             // 接收到定时按键
  77   2                                      if( SendMsg[3] == 0x1E)
  78   2                                      {
  79   3                                              SendMsg[3] = 0x0A;
  80   3                                      }
  81   2                                      else if(SendMsg[3] == 0x0A)
  82   2                                      {                       
  83   3                                              SendMsg[3]=0x14;
  84   3                                      }
  85   2                                      else 
  86   2                                      {
  87   3                                              SendMsg[3]=0x1E;
  88   3                                      }
  89   2                              break;                                                                                                                          
  90   2                      
  91   2                      case 0x02 :                                                                                                     // PAUSE暂停
  92   2                                      if(SendMsg[1] & 0x01)
  93   2                                      {
  94   3                          SendMsg[1] = SendMsg[1] & 0xF0;
  95   3                                              myEvnt.Bit.IsChange = true ;
  96   3                                      }
  97   2                                      else
  98   2                                      {
  99   3                          SendMsg[1] = SendMsg[1] & 0xF0 | 0x01;
 100   3                                              
 101   3                                      }
 102   2                                      myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作
 103   2                              break;                                                                                                                  
 104   2                      
 105   2                      case 0x04 : 
 106   2                                              SendMsg[0]=SendMsg[0] & 0xF0 | 0x09;                            // vibratig 按摩椅震动
 107   2                              break;                                                                                                          
 108   2                      
 109   2                      case 0x05 :                                                                                                     // neck&shouder改成auto_2
 110   2                                              SendMsg[0]=SendMsg[0] & 0x0F | 0x20 ;
 111   2                                              SendMsg[1]=SendMsg[1] & 0x00 ;
 112   2                                              
 113   2                                              myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作
 114   2                                              myEvnt.Bit.IsAuto_Two = true ;                                          // 申请自动模式2
 115   2                                              mySerial.action_N = 0x02;                                                       // 动作编号2
 116   2                                              
C51 COMPILER V9.01   SERIAL                                                                02/20/2017 15:30:13 PAGE 3   

 117   2                                              myMassage.CycleKne = 0 ;                                                        // 揉捏圈数计数清零
 118   2                                              myMassage.AngleCount = 0 ;                                                      // 揉捏角度计数清零
 119   2                              break;                                                                                                          
 120   2      
 121   2                      case 0x06 : 
 122   2                                              SendMsg[0]=SendMsg[0] & 0x0F | 0x10;                            // back&waist改成auto_3
 123   2                                              SendMsg[1]=SendMsg[1] & 0x00 ;
 124   2                                              
 125   2                                              myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作
 126   2                                              myEvnt.Bit.IsAuto_Three = true ;                                        // 申请自动模式3
 127   2                                              mySerial.action_N = 0x03;                                                       // 动作编号3            
 128   2                              break;  
 129   2              
 130   2                      case 0x07 :                                                                                                     // pause改成auto_1
 131   2                                              SendMsg[1] = SendMsg[1] & 0x00 | 0x40;
 132   2                                              SendMsg[0] = SendMsg[0] & 0x0F;
 133   2                                              
 134   2                                              myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作
 135   2                                              myEvnt.Bit.IsAuto_One = true ;                                          // 申请自动模式1
 136   2                                              mySerial.action_N = 0x01;                                                       // 动作编号1
 137   2                              break;  
 138   2                      
 139   2                      case 0x09 :                                                                                                         // 捶背percussion
 140   2                                              SendMsg[1] = SendMsg[1] & 0x00;
 141   2                                              SendMsg[0] = SendMsg[0] & 0x0F | 0x80;
 142   2                      
 143   2                                              myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作         
 144   2                                              myEvnt.Bit.IsPer = true ;                                                       // 申请捶背
 145   2                                              
 146   2                                              mySerial.action_N = 0x06;
 147   2                              break;  
 148   2                      
 149   2                      case 0x0A :                                                                                                     // percussion+knead     捶背和按摩
 150   2                                              SendMsg[0] = SendMsg[0] & 0x0F;
 151   2                                              SendMsg[1] = SendMsg[1] & 0x00 | 0x02;
 152   2                                              
 153   2                                              myEvnt.Bit.IsAllMotorsStop = true ;                                     // 申请所有电机停止工作
 154   2                                              myEvnt.Bit.IsPerKne = true ;                                    // 申请同时按摩和捶背
 155   2                                                      
 156   2                                              mySerial.action_N = 0x04;
 157   2                              
 158   2                              break; 
 159   2                      
 160   2                      case 0x0B :                                                                                                             // 速度调整按键 
 161   2                                              if( myMassage.speed < MAX_SPEED )
 162   2                                              {               
 163   3                                                      if( myMassage.speed <= HIGH_SPEED )
 164   3                                                      {
 165   4                                                              myMassage.speed = myMassage.speed + ADD_SPEED;
 166   4                                                      }
 167   3                                                      else
 168   3                                                      {
 169   4                                                              myMassage.speed = INIT_SPEED ;
 170   4                                                      }       
 171   3                                              }
 172   2                                              else
 173   2                                              {
 174   3                                                      myMassage.speed = INIT_SPEED ;
 175   3                                              }
 176   2                                              
 177   2                                              myEvnt.Bit.IsChange = true ;
 178   2                                              
C51 COMPILER V9.01   SERIAL                                                                02/20/2017 15:30:13 PAGE 4   

 179   2                              break;  
 180   2                                                                              
 181   2                      case 0x0C : 
 182   2                                              seatm_up =0  ;
 183   2                                              seatm_dn =1  ;                                  
 184   2                              break;                                                                                                          // seat向前移动     //0C AA... 0C 1E
 185   2                      
 186   2                      case 0X0D :                                                                                                     // kneading 按摩揉捏
 187   2                                              SendMsg[1] = SendMsg[1] & 0x00;
 188   2                                              SendMsg[0] = SendMsg[0] & 0x0F | 0x40;
 189   2                                      
 190   2                                              myEvnt.Bit.IsAllMotorsStop = true;                                      // 申请所有电机停止工作
 191   2                                      myEvnt.Bit.IsKne =  true;                                                                                                        // 申请揉捏
 192   2                                              mySerial.action_N=0x05;  
 193   2                              break;  
 194   2                      
 195   2                      case 0x0E :                                                                                                                             // 申请按摩宽度调整
 196   2                                              myEvnt.Bit.IsChangeWidth = true ;                                                                                       
 197   2                              break;                                                                                                                                  
 198   2                      
 199   2                      case 0x0F : 
 200   2                                              if(upCheck)
 201   2                                              {
 202   3                                                      upm=0;
 203   3                                              }
 204   2                              
 205   2                              break;                                                                                                                                  // upper 上升       // 0F AA... 0F 1F 
 206   2                      
 207   2                      case 0x10 : 
 208   2                                              seatm_up =1  ;
 209   2                                              seatm_dn =0  ;
 210   2                              break;                                                                                                                                  // seat向后移动     // 10 AA... 10 20 
 211   2                      
 212   2                      case 0x11 : 
 213   2                                              backm_up  =0 ;
 214   2                                              backm_dn  =1 ;
 215   2                              break;                                                                                                                                  // back向后移动     // 11 AA... 11 21
 216   2                      
 217   2                      case 0x12 : 
 218   2                                              backm_up  =1 ;
 219   2                                              backm_dn  =0 ;
 220   2                              break;                                                                                                                                  // back向前移动     // 12 AA... 12 22 
 221   2                      
 222   2                      case 0x13 :
 223   2                                              if(dnCheck)
 224   2                                              {
 225   3                                                  dnm=0;
 226   3                                              }               
 227   2                              break;                                                                                                                                  // lower下降        // 13 AA... 13 23
 228   2                      case 0x1E : 
 229   2                                              seatm_up =1  ;
 230   2                                              seatm_dn =1;
 231   2                              break;  //
 232   2                      case 0x1F : 
 233   2                                              upm=1;
 234   2                              break;  //
 235   2                      case 0x20 : 
 236   2                                              seatm_up =1  ;
 237   2                                              seatm_dn =1;
 238   2                              break;  //
 239   2                      case 0x21 :     
 240   2                                              backm_up =1 ;
C51 COMPILER V9.01   SERIAL                                                                02/20/2017 15:30:13 PAGE 5   

 241   2                                              backm_dn =1 ;
 242   2                              break;  //
 243   2                      case 0x22 :     
 244   2                                              backm_up =1 ;
 245   2                                              backm_dn =1 ;
 246   2                              break;  //
 247   2                      case 0x23 : 
 248   2                                              dnm=1;
 249   2                              break;  //
 250   2                      
 251   2                      default : break ;
 252   2                      }
 253   1      }
 254          
 255          
 256          
 257          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    595    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
